@model List<ToDoListItem>
@{
    ViewData["Title"] = "Home Page";
    ViewBag.Title = "To-Do List";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.ToDoItemMessage = null;
    var myTaskTitle = ViewBag.myTaskTitle;
    var myTaskDescription = ViewBag.myTaskDescription;
}

<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
</head>

<script>
    function toggleTaskCompletion(taskId) {

        fetch('/Home/CompleteToDoListItem', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(taskId)
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }
</script>

<script>
    function toggleTaskDeletion(taskId) {
        fetch('/Home/DeleteToDoListItem', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(taskId)
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }
</script>

<div class="h3 mb-lg-5 CompletedTasksBorders">To-Do List</div>

<div class="row container-sm">
    <div class="col-sm-2 mt-2">
        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addTaskModal">
            Add New Task
        </button>
    </div>
</div>

<div class="modal fade" id="addTaskModal" tabindex="-1" aria-labelledby="addTaskModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addTaskModalLabel">Add New Task</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newTaskForm" method="post" action="AddNewToDoListItem">
                    <div class="mb-3">
                        <label for="myTaskTitle" class="form-label">Task Name</label>
                        <input type="text" class="form-control" id="myTaskTitle" name="myTaskTitle" value="@myTaskTitle" required>
                    </div>
                    <div class="mb-3">
                        <label for="myTaskDescription" class="form-label">Description</label>
                        <textarea class="form-control" rows="1" id="myTaskDescription" name="myTaskDescription" value="@myTaskDescription"></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Task</button>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="container-fluid mt-4">
    <section class="mb-4">
        <div class="row">
            <!-- Pending Tasks -->
            <div class="col-md-4 PendingTasksBorders">
                <h4 class="text-start mb-4 myWhiteFont">Pending Tasks</h4>
                @foreach (var task in Model.Where(t => t.IsCompleted == false && t.IsDeleted == false).OrderByDescending(f => f.CreatedAt).ToList())
                {
                    <div class="card mt-3" id="@task.Id">
                        <div class="card-body mt-1">
                            <div class="d-flex justify-content-between">
                                <div class="d-flex">
                                    <input class="form-check-input" onchange="toggleTaskCompletion('@task.Id.ToString()')" type="checkbox" />
                                    <h5 class="card-title ms-2">@task.Title</h5>
                                </div>
                                <button class="btn btn-danger btn-sm" onclick="toggleTaskDeletion('@task.Id.ToString()')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                            <p class="card-text text-start ms-3">@task.Description</p>
                        </div>
                    </div>
                }
            </div>

            <!-- Completed Tasks -->
            <div class="col-md-4 CompletedTasksBorders">
                <h4 class="text-start mb-4 myWhiteFont">Completed Tasks</h4>
                @foreach (var task in Model.Where(t => t.IsCompleted == true && t.IsDeleted == false).OrderByDescending(f => f.CreatedAt).ToList())
                {
                    <div class="card mt-3">
                        <div class="card-body mt-1">
                            <div class="d-flex justify-content-between">
                                <div class="d-flex">
                                    <h5 class="card-title ms-2">@task.Title</h5>
                                </div>
                                <button class="btn btn-danger btn-sm" onclick="toggleTaskDeletion('@task.Id.ToString()')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                            <p class="card-text text-start ms-3">@task.Description</p>
                        </div>
                    </div>
                }
            </div>

            <!-- Deleted Tasks -->
            <div class="col-md-3 DeletedTasksBorders">
                <h4 class="text-start mb-4 myWhiteFont">Deleted Tasks</h4>
                @foreach (var task in Model.Where(t => t.IsDeleted == true).OrderByDescending(f => f.CreatedAt).ToList())
                {
                    <div class="card mt-3">
                        <div class="card-body mt-1">
                            <div class="d-flex justify-content-between">
                                <div class="d-flex">
                                    <h5 class="card-title text-decoration-line-through ms-2">@task.Title</h5>
                                </div>
                            </div>
                            <p class="card-text text-start ms-3">@task.Description</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
</div>